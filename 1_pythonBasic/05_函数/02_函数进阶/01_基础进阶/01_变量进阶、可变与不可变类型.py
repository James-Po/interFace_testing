"""
变量的进阶
引用[了解]
1, 定义变量的时候, 变量和数据 都会在内存开辟空间
2, 变量所对应的内存空间中存储的是 数据所在内存的地址 (平时理解为 将数据存储到变量中即可)
3. 变量中保存数据的地址,就称为是引用
4, Python 中所有数据的传递,传递的都是引用(即地址)
5, 赋值运算符(=), 会改变变量的引用, 即只有 = 可以修改变量的引用
6, 可以使用 id(变量)  函数,查看变量的引用
"""

"""
可变类型与不可变类型[记住]
根据内存中的数据是否允许修改,将数据类型分为可变类型与不可变类型
简单理解: 不使用等号,能不能修改数据值
可变类型: 可以修改-   
列表(list)    -   
list.append()
字典(dict )   dict.pop()-   
集合(set)

不可变类型: 不允许修改-   
数字类型(int , float , bool) -   -   
字符串(str)
元组(tuple)
"""
my_tuple = (1, 2, [10, 20])      # 元组中 存储的 1 的地址, 2 的地址, 列表的地址

print(my_tuple, id(my_tuple), id(my_tuple[-1]), id(my_tuple[-1][-1]))
my_tuple[-1][-1] = 30    # 修改的列表中最后一个位置的引用
print(my_tuple, id(my_tuple), id(my_tuple[-1]), id(my_tuple[-1][-1]))